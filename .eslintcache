[{"D:\\Source\\meng-mockup\\src\\index.js":"1","D:\\Source\\meng-mockup\\src\\App.js":"2","D:\\Source\\meng-mockup\\src\\reportWebVitals.js":"3","D:\\Source\\meng-mockup\\src\\GlobalBar\\GlobalBar.jsx":"4","D:\\Source\\meng-mockup\\src\\MasterPanel\\MasterPanel.jsx":"5","D:\\Source\\meng-mockup\\src\\MainPanel\\MainPanel.jsx":"6","D:\\Source\\meng-mockup\\src\\Toolbar\\Toolbar.jsx":"7","D:\\Source\\meng-mockup\\src\\ActionBar\\ActionBar.jsx":"8","D:\\Source\\meng-mockup\\src\\SearchBox\\SearchBox.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":497,"mtime":1609168151045,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1441,"mtime":1609168611295,"results":"14","hashOfConfig":"11"},{"size":1895,"mtime":1609188895290,"results":"15","hashOfConfig":"11"},{"size":10822,"mtime":1609792859367,"results":"16","hashOfConfig":"11"},{"size":1158,"mtime":1609168692910,"results":"17","hashOfConfig":"11"},{"size":1255,"mtime":1608569888953,"results":"18","hashOfConfig":"11"},{"size":403,"mtime":1609204786236,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1362dt6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"D:\\Source\\meng-mockup\\src\\index.js",[],["45","46"],"D:\\Source\\meng-mockup\\src\\App.js",["47"],"import logo from './Connectwise Logo.svg';\nimport './App.scss';\nimport GlobalBar from './GlobalBar/GlobalBar';\nimport MasterPanel from './MasterPanel/MasterPanel';\nimport MainPanel from './MainPanel/MainPanel';\nimport Toolbar from './Toolbar/Toolbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalBar></GlobalBar>\n      <div>\n        <MasterPanel></MasterPanel>\n        <MainPanel></MainPanel>\n        <Toolbar></Toolbar>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Source\\meng-mockup\\src\\reportWebVitals.js",[],"D:\\Source\\meng-mockup\\src\\GlobalBar\\GlobalBar.jsx",["48"],"import React, { PureComponent } from 'react';\nimport logo from '..//Connectwise Logo.svg';\nimport PropTypes from 'prop-types';\nimport './GlobalBar.scss';\n//import { Test } from './GlobalBar.styles';\n\nclass GlobalBar extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('GlobalBar will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('GlobalBar mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('GlobalBar will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('GlobalBar will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('GlobalBar did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('GlobalBar will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"GlobalBarWrapper\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h3>New Package</h3>\n        <span className=\"Spacer\"></span>\n        <div className='HelperIcon'></div>\n        <div className='NineDots'></div>\n        <div className='UserIcon'>M</div>\n      </div>\n    );\n  }\n}\n\nGlobalBar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nGlobalBar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default GlobalBar;\n","D:\\Source\\meng-mockup\\src\\MasterPanel\\MasterPanel.jsx",["49"],"import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './MasterPanel.scss'\n//import { Test } from './MasterPanel.styles';\n\nclass MasterPanel extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('MasterPanel will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('MasterPanel mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('MasterPanel will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('MasterPanel will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('MasterPanel did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('MasterPanel will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"MasterPanelWrapper\">\n        <div>\n          <div className='BackarrowButton'></div>\n          <span className='Spacer'></span>\n          <div className='PinButton'></div>\n        </div>\n        <div>\n          <div className='WorkspaceIcon'></div>\n          <span>Workspace</span>\n        </div>\n        <div>\n          <div className='AdminIcon'></div>\n          <span>Admin</span>\n        </div>\n        <div>\n          <div className='PreferencesIcon'></div>\n          <span>Preferences</span>\n        </div>\n        <div className='Selected'>\n          <div className='PoliciesIcon'></div>\n          <span>Policies</span>\n        </div>\n        <div>\n          <div className='CompanyIcon'></div>\n          <span>Companies</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nMasterPanel.propTypes = {\n  // bla: PropTypes.string,\n};\n\nMasterPanel.defaultProps = {\n  // bla: 'test',\n};\n\nexport default MasterPanel;\n","D:\\Source\\meng-mockup\\src\\MainPanel\\MainPanel.jsx",["50","51","52","53","54","55","56","57","58","59","60","61","62"],"D:\\Source\\meng-mockup\\src\\Toolbar\\Toolbar.jsx",["63"],"import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './Toolbar.styles';\nimport './Toolbar.scss';\n\nclass Toolbar extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('Toolbar will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('Toolbar mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('Toolbar will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('Toolbar will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('Toolbar did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('Toolbar will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"ToolbarWrapper\">\n        <div className='FilterIcon'></div>\n      </div>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nToolbar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Toolbar;\n","D:\\Source\\meng-mockup\\src\\ActionBar\\ActionBar.jsx",["64"],"import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './ActionBar.styles';\nimport './ActionBar.scss';\nclass ActionBar extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('ActionBar will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('ActionBar mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('ActionBar will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('ActionBar will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('ActionBar did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('ActionBar will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"ActionBarWrapper\">\n       <button className='PrimaryButton'>Save</button>\n       <button className='SecondaryButton'>Cancel</button>\n\n      </div>\n    );\n  }\n}\n\nActionBar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nActionBar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ActionBar;\n","D:\\Source\\meng-mockup\\src\\SearchBox\\SearchBox.jsx",["65"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBox.scss';\n//import { Test } from './SearchBox.styles';\n\nconst SearchBox = (props) => (\n  <div className=\"SearchBoxWrapper\">\n    <input type='search' placeholder='Search'></input>\n  </div>\n);\n\nSearchBox.propTypes = {\n  // bla: PropTypes.string,\n};\n\nSearchBox.defaultProps = {\n  // bla: 'test',\n};\n\nexport default SearchBox;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":110,"column":21,"nodeType":"77","endLine":110,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":110,"column":21,"nodeType":"77","endLine":110,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":138,"column":21,"nodeType":"77","endLine":138,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":138,"column":21,"nodeType":"77","endLine":138,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":161,"column":21,"nodeType":"77","endLine":161,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":161,"column":21,"nodeType":"77","endLine":161,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":185,"column":21,"nodeType":"77","endLine":185,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":185,"column":21,"nodeType":"77","endLine":185,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":213,"column":21,"nodeType":"77","endLine":213,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":213,"column":21,"nodeType":"77","endLine":213,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":241,"column":21,"nodeType":"77","endLine":241,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":241,"column":21,"nodeType":"77","endLine":241,"endColumn":85},{"ruleId":"70","severity":1,"message":"74","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]