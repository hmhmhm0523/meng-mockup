{"version":3,"sources":["Connectwise Logo.svg","GlobalBar/GlobalBar.jsx","MasterPanel/MasterPanel.jsx","ActionBar/ActionBar.jsx","SearchBox/SearchBox.jsx","MainPanel/MainPanel.jsx","Toolbar/Toolbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["GlobalBar","props","componentWillMount","console","log","componentDidMount","componentWillReceiveProps","nextProps","componentWillUpdate","nextState","componentDidUpdate","componentWillUnmount","state","hasError","this","className","src","logo","alt","PureComponent","defaultProps","MasterPanel","ActionBar","SearchBox","type","placeholder","MainPanel","handleToggleExpand","bind","event","button","target","content","parentNode","nextSibling","classList","toggle","value","onClick","Toolbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bae5f83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Connectwise Logo.d3a7a8ab.svg\";","import React, { PureComponent } from 'react';\nimport logo from '..//Connectwise Logo.svg';\nimport PropTypes from 'prop-types';\nimport './GlobalBar.scss';\n//import { Test } from './GlobalBar.styles';\n\nclass GlobalBar extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('GlobalBar will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('GlobalBar mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('GlobalBar will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('GlobalBar will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('GlobalBar did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('GlobalBar will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"GlobalBarWrapper\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h3>New Package</h3>\n        <span className=\"Spacer\"></span>\n        <div className='HelperIcon'></div>\n        <div className='NineDots'></div>\n        <div className='UserIcon'>M</div>\n      </div>\n    );\n  }\n}\n\nGlobalBar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nGlobalBar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default GlobalBar;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './MasterPanel.scss'\n//import { Test } from './MasterPanel.styles';\n\nclass MasterPanel extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('MasterPanel will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('MasterPanel mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('MasterPanel will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('MasterPanel will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('MasterPanel did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('MasterPanel will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"MasterPanelWrapper\">\n        <div>\n          <div className='BackarrowButton'></div>\n          <span className='Spacer'></span>\n          <div className='PinButton'></div>\n        </div>\n        <div>\n          <div className='WorkspaceIcon'></div>\n          <span>Workspace</span>\n        </div>\n        <div>\n          <div className='AdminIcon'></div>\n          <span>Admin</span>\n        </div>\n        <div>\n          <div className='PreferencesIcon'></div>\n          <span>Preferences</span>\n        </div>\n        <div className='Selected'>\n          <div className='PoliciesIcon'></div>\n          <span>Policies</span>\n        </div>\n        <div>\n          <div className='CompanyIcon'></div>\n          <span>Companies</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nMasterPanel.propTypes = {\n  // bla: PropTypes.string,\n};\n\nMasterPanel.defaultProps = {\n  // bla: 'test',\n};\n\nexport default MasterPanel;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './ActionBar.styles';\nimport './ActionBar.scss';\nclass ActionBar extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('ActionBar will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('ActionBar mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('ActionBar will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('ActionBar will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('ActionBar did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('ActionBar will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"ActionBarWrapper\">\n       <button className='PrimaryButton'>Save</button>\n       <button className='SecondaryButton'>Cancel</button>\n\n      </div>\n    );\n  }\n}\n\nActionBar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nActionBar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ActionBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBox.scss';\n//import { Test } from './SearchBox.styles';\n\nconst SearchBox = (props) => (\n  <div className=\"SearchBoxWrapper\">\n    <input type='search' placeholder='Search'></input>\n  </div>\n);\n\nSearchBox.propTypes = {\n  // bla: PropTypes.string,\n};\n\nSearchBox.defaultProps = {\n  // bla: 'test',\n};\n\nexport default SearchBox;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './MainPanel.styles';\nimport './MainPanel.scss';\nimport ActionBar from '../ActionBar/ActionBar';\nimport SearchBox from '../SearchBox/SearchBox';\n\nclass MainPanel extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleToggleExpand= this.handleToggleExpand.bind(this);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  handleToggleExpand (event) {\n    let button = event.target;\n    let content = event.target.parentNode.nextSibling;\n    button.classList.toggle(\"Collapsed\");\n    content.classList.toggle(\"Collapsed\");\n    // var content = this.parentNode.nextElementSibling;\n    // content.styel.maxHeigh = null;\n  }\n\n  componentWillMount = () => {\n    console.log('MainPanel will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('MainPanel mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('MainPanel will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('MainPanel will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('MainPanel did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('MainPanel will unmount');\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"MainPanelWrapper\">\n        <ActionBar></ActionBar>\n        <div className='ContentPanel'>\n          <div className='NameServiceMarket'>\n            <dl>\n              <dt>Name</dt>\n              <dd><input value=\"Governament Premium\"></input></dd>\n              <dt>Service Level</dt>\n              <dd>\n                <select>\n                  <option>Premium</option>\n                  <option>Default</option>\n                </select>\n              </dd>\n              <dt>Market</dt>\n              <dd>\n                <select>\n                  <option>Governament</option>\n                  <option>Default</option>\n                </select></dd>\n            </dl>\n          </div>\n          <div className='Description'>\n            <dl>\n              <dt>Description</dt>\n              <dd>\n                <textarea placeholder='Input Field'></textarea>\n              </dd>\n            </dl>\n          </div>\n          <div className='PackageBuilder'>\n            <div className='Tile'>\n              <div className='TileHeader'>Package Builder</div>\n              <div className='TileContent'>\n                <div className='DropZone'>\n                  Drag Policies Building Blocks Here\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='Policies'>\n            <div className='Tile'>\n              <div className='TileHeader'>\n                <span>Policies</span>\n                <div className='Spacer'></div>\n                <SearchBox></SearchBox>\n              </div>\n              <div className='TileContent'>\n                <div className='CollapsePanel Integrations'>\n                  <div className='CollapsePanelHeader'>\n                    <div className='HeaderIcon '>\n                      <div></div>\n                    </div>\n                    <span>Integrations</span>\n                    <div className='Spacer'></div>\n                    <a className='CollapseButton' onClick={this.handleToggleExpand}></a>\n                  </div>\n                  <div className='CollapsePanelContent'>\n                    <div className='PolicyItem'>\n                      <div className='Name'>LMI - Default</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Integrations</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>LMI - GP</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Integrations</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Webroot</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Integrations</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='CollapsePanel Network'>\n                  <div className='CollapsePanelHeader'>\n                    <div className='HeaderIcon '>\n                      <div></div>\n                    </div>\n                    <span>Network</span>\n                    <div className='Spacer'></div>\n                    <a className='CollapseButton' onClick={this.handleToggleExpand}></a>\n                  </div>\n                  <div className='CollapsePanelContent'>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 01</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Network</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 02</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Network</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='CollapsePanel Finance'>\n                  <div className='CollapsePanelHeader'>\n                    <div className='HeaderIcon '>\n                      <div></div>\n                    </div>\n                    <span>Finance</span>\n                    <div className='Spacer'></div>\n                    <a className='CollapseButton' onClick={this.handleToggleExpand}></a>\n                  </div>\n                  <div className='CollapsePanelContent'>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Agreement GP</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Finance</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Agreement RP</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Finance</div>\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className='CollapsePanel Devices'>\n                  <div className='CollapsePanelHeader'>\n                    <div className='HeaderIcon '>\n                      <div></div>\n                    </div>\n                    <span>Devices</span>\n                    <div className='Spacer'></div>\n                    <a className='CollapseButton' onClick={this.handleToggleExpand}></a>\n                  </div>\n                  <div className='CollapsePanelContent'>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 03</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Devices</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 04</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Devices</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 05</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Devices</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='CollapsePanel Notifications'>\n                  <div className='CollapsePanelHeader'>\n                    <div className='HeaderIcon '>\n                      <div></div>\n                    </div>\n                    <span>Notification</span>\n                    <div className='Spacer'></div>\n                    <a className='CollapseButton' onClick={this.handleToggleExpand}></a>\n                  </div>\n                  <div className='CollapsePanelContent'>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 06</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Notifications</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 07</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Notifications</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 08</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Notifications</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='CollapsePanel Project'>\n                  <div className='CollapsePanelHeader'>\n                    <div className='HeaderIcon '>\n                      <div></div>\n                    </div>\n                    <span>Project</span>\n                    <div className='Spacer'></div>\n                    <a className='CollapseButton' onClick={this.handleToggleExpand}></a>\n                  </div>\n                  <div className='CollapsePanelContent'>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 09</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Project</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 10</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Project</div>\n                    </div>\n                    <div className='PolicyItem'>\n                      <div className='Name'>Policy 11</div>\n                      <div className='Description'>Description...</div>\n                      <div className='Category'>Project</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMainPanel.propTypes = {\n  // bla: PropTypes.string,\n};\n\nMainPanel.defaultProps = {\n  // bla: 'test',\n};\n\nexport default MainPanel;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './Toolbar.styles';\nimport './Toolbar.scss';\n\nclass Toolbar extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('Toolbar will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('Toolbar mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('Toolbar will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('Toolbar will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('Toolbar did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('Toolbar will unmount');\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return (\n      <div className=\"ToolbarWrapper\">\n        <div className='FilterIcon'></div>\n      </div>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nToolbar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Toolbar;\n","import logo from './Connectwise Logo.svg';\nimport './App.scss';\nimport GlobalBar from './GlobalBar/GlobalBar';\nimport MasterPanel from './MasterPanel/MasterPanel';\nimport MainPanel from './MainPanel/MainPanel';\nimport Toolbar from './Toolbar/Toolbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalBar></GlobalBar>\n      <div>\n        <MasterPanel></MasterPanel>\n        <MainPanel></MainPanel>\n        <Toolbar></Toolbar>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}